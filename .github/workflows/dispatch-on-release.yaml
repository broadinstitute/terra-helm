name: Process new chart releases

on:
  release:
    types:
      - published

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Get branch
        id: branch
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          echo "Branch is: ${BRANCH}"
          if [[ "${BRANCH}" != 'master' ]]; then
            echo "Branch is not master, no dispatch will be sent"
          fi
          echo ::set-output name=branch::${BRANCH}

      - name: Get release info
        if: steps.branch.outputs.branch == 'master'
        id: release-info
        run: |
          tag_name='${{ github.event.release.tag_name }}'
          CHART_NAME="${tag_name%-*.*.*}"
          CHART_VERSION="${tag_name##*-}"
          echo "Tag name: ${tag_name}"
          echo "Chart name: ${CHART_NAME}"
          echo "Chart version: ${CHART_VERSION}"
          echo ::set-output name=chart-name::${CHART_NAME}
          echo ::set-output name=chart-version::${CHART_VERSION}

      - name: Get release strategy
        if: steps.branch.outputs.branch == 'master'
        id: release-strategy
        run: |
          CHART_NAME="${{ steps.release-info.outputs.chart-name }}"
          DEV_ONLY=$(jq -r ".${CHART_NAME}.dev_only" release-strategy.json)
          if [[ "${DEV_ONLY}" == 'null' ]]; then
            echo "No release strategy found, no dispatch will be sent"
          else
            echo "Release strategy for chart ${CHART_NAME} is 'dev_only: ${DEV_ONLY}'"
          fi
          echo ::set-output name=dev-only::${DEV_ONLY}

      - name: Send dispatch to terra-helmfile
        if: (steps.branch.outputs.branch == 'master') && (steps.release-strategy.outputs.dev-only != 'null')
        uses: broadinstitute/repository-dispatch@master
        with:
          token: ${{ secrets.CR_TOKEN }}
          repository: broadinstitute/terra-helmfile
          event-type: update-chart
          client-payload: '{"service": "${{ steps.release-info.outputs.chart-name }}", "version": "${{ steps.release-info.outputs.chart-version }}", "dev_only": ${{ steps.release-strategy.outputs.dev-only }}}'

      - name: Notify Slack on failure
        if: failure()
        uses: broadinstitute/action-slack@v2.7.0
        env:
          GITHUB_TOKEN: ${{ secrets.CR_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          username: "Release Dispatch Action"
          text: "Dispatch to terra-helmfile on chart release failed!"
