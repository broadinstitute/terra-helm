# Manual steps: 
#  - clone https://github.com/tuenti/secrets-manager, run:
#      kubectl apply -f crd.yaml
#  - kubectl create secret generic secret-manager-approle --from-literal=role-id=*** --from-literal=secret-id=***
install-secrets-manager:
  enabled: true
  vaultLocation: https://clotho.broadinstitute.org:8200
  vaultVersion: kv1
  serviceAccount:
    create: true
  rbac:
    create: true
  existingSecret: secret-manager-approle
  existingRoleIdKey: role-id
  existingSecretIdKey: secret-id
terra-cluster-networking:
  namespaces:
    istio: istio-system
  gateway:
    name: default-istio-gateway
terra-cluster-psps:
  namespaces:
    istio: istio-system
    kubeStateMetrics: default
  serviceAccounts:
    istio:
    - istio-citadel-service-account
    - istio-galley-service-account
    - istio-ingressgateway-service-account
    - istio-mixer-service-account
    - istio-multi
    - istio-pilot-service-account
    - istio-security-post-install-account
    - istio-sidecar-injector-service-account
    - promsd
terra-prometheus:
  enabled: true
  namespaceOverride: monitoring
  kube-prometheus-stack:
    # passing override to stable/prometheus-operator dependency
    namespaceOverride: monitoring
    defaultRules:
      rules:
        # our prometheus chart deploys its own version of these rules so we can actually change them
        kubernetesApps: false
        # gke configuration causes these alerts to flap, will make custom versions that provided the same functionality
        kubernetesResources: false
        kubernetesSystem: false
        prometheus: false
        prometheusOperator: false
    # Namespace overrides for sub charts
    prometheusOperator:
      admissionWebhooks:
        enabled: false # known issue with GKE clusters
      tlsProxy:
        enabled: false # Only needed for the above, causes race conditions when admisison webhook is enabled
    grafana:
      namespaceOverride: monitoring
    kube-state-metrics:
      namespaceOverride: monitoring
    prometheus-node-exporter:
      namespaceOverride: monitoring
    # Some k8s internals are abstracted by gke and are not accessible
    # The following disable prometheus scraping of those components
    coreDns:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeDns:
      enabled: true # used instead of coreDns in GKE
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    # Metric relabelings for stackdriver filter
    prometheusOperator:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    prometheus:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    alertmanager:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    grafana:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    kubeApiServer:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    kubeDns:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    kubelet:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
    nodeExporter:
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            targetLabel: sd_export
            replacement: 'false'
reloader:
  enabled: true
  reloader:
    serviceAccount:
      name: reloader

terra-cluster-storage:
  enabled: true

diskmanager:
  enabled: true


