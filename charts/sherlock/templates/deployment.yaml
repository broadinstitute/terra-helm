apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  labels:
    {{- include "sherlock.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      deployment: {{ .Values.name }}-deployment
  template:
    metadata:
      labels:
        deployment: {{ .Values.name }}-deployment
        {{- include "sherlock.labels" . | nindent 8 }}
      annotations:
        {{- /* Automatically restart deployments on config map change: */}}
        checksum/{{ .Values.name }}-cm: {{ include (print $.Template.BasePath "/configMap.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.name }}-sa
      volumes:
      - name: {{ .Values.name }}-cm
        configMap:
          name: {{ .Values.name }}-cm

      containers:
      - name: {{ .Values.name }}-sqlproxy
        image: "gcr.io/cloudsql-docker/gce-proxy:{{ .Values.sqlproxy.version }}"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep {{ .Values.startupSleep }}"]
        env:
        - name: SQL_INSTANCE_PROJECT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-cloudsql-postgres-instance
              key: project
        - name: SQL_INSTANCE_REGION
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-cloudsql-postgres-instance
              key: region
        - name: SQL_INSTANCE_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-cloudsql-postgres-instance
              key: name
        command: ["/cloud_sql_proxy",
                  "-instances=$(SQL_INSTANCE_PROJECT):$(SQL_INSTANCE_REGION):$(SQL_INSTANCE_NAME)=tcp:5432"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false

      - name: {{ .Values.name }}-app
        image: "{{ .Values.imageConfig.repository }}:{{ .Values.imageConfig.tag | default .Values.global.applicationVersion }}"
        imagePullPolicy: {{ .Values.imageConfig.imagePullPolicy }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}

        env:
        - name: SHERLOCK_DBUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-postgres-db-creds
              key: username
        - name: SHERLOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-postgres-db-creds
              key: password
        - name: SHERLOCK_DBNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-postgres-db-creds
              key: db

        volumeMounts:
        - mountPath: /etc/sherlock/sherlock.yaml
          name: {{ .Values.name }}-cm
          readOnly: true
          subPath: sherlock.yaml

        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          {{- toYaml .Values.probes.readiness.spec | nindent 10 }}
        {{- end }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          {{- toYaml .Values.probes.liveness.spec | nindent 10 }}
        {{- end }}
