global:
  name: grafana

ingress:
  # -- ENABLE this wrapper's simpler ingress config
  enabled: true
  # -- (string) Name of static IP previously allocated in the project
  staticIpName:
  # -- (string) Optionally, the name of a cloud armor security policy to apply to the ingress backend
  securityPolicy: null
  # -- Path to use for LB health checks
  requestPath: /api/health
  # -- Seconds before LB health check will time out
  timeoutSec: 120
  
  cert:
    # -- Previously provisioned certs to use on the LB
    preSharedCerts: []
  certmanager:
    # -- If CertManager should be used to dynamically provision an LB cert
    enabled: true
    # -- FQDNs to allocate cert for
    dnsNames: []

grafana:
  # -- Replicaset revisions not saved since we'd rollback via gitops or argo
  revisionHistoryLimit: 0

  ingress:
    # -- DISABLE grafana's built-in ingress
    enabled: false

  service:
    annotations:
      # Associate a backend config with the ingress: https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#associating_backendconfig_with_your_ingress
      # Value should match `{{ .Values.global.name }}-ingress-backendconfig` per backendConfig.yaml, but we can't template here
      cloud.google.com/backend-config: '{"default": "grafana-ingress-backendconfig"}'
      # Enable container-native load balancing https://cloud.google.com/kubernetes-engine/docs/how-to/container-native-load-balancing
      cloud.google.com/neg: '{"ingress": true}'
      # DISABLE TLS between LB and app https://cloud.google.com/kubernetes-engine/docs/concepts/ingress-xlb
      # Key should match `{{ .Values.grafana.service.portName }}`, default of "service", but we can't template here
      cloud.google.com/app-protocols: '{"service":"HTTP"}'
