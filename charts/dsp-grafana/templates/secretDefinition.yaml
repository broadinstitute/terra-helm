{{/*
We always create this particular secret, even if it would be empty, because the grafana container
in the subchart will always try to read it.
*/}}
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.global.name }}-container-env
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  name: {{ .Values.global.name }}-container-env
  keysMap:
    {{- range .Values.secrets.containerEnv }}
    {{ .envVar | required "envVar is required for each containerEnv entry" }}:
      path: {{ .vaultPath | required "vaultPath is required for each containerEnv entry" }}
      key: {{ .vaultKey | required "vaultKey is required for each containerEnv entry" }}
      encoding: {{ .sourceEncoding | default "text" }}
    {{- end }}
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  # Name not templated because Grafana does not support looking up a templated name for this
  name: grafana-admin-account
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  name: grafana-admin-account
  keysMap:
    {{- with .Values.secrets.adminAccount }}
    admin-user:
      path: {{ .vaultPath | required "vaultPath is required for adminAccount" }}
      key: {{ .usernameVaultKey | required "usernameVaultKey is required for adminAccount" }}
      encoding: {{ .usernameSourceEncoding | default "text" }}
    admin-password:
      path: {{ .vaultPath | required "vaultPath is required for adminAccount" }}
      key: {{ .passwordVaultKey | required "passwordVaultKey is required for adminAccount" }}
      encoding: {{ .passwordSourceEncoding | default "text" }}
    {{- end }}
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.global.name }}-sqlproxy-env
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  name: {{ .Values.global.name }}-sqlproxy-env
  keysMap:
    {{- with .Values.secrets.databaseInstance }}
    SQL_INSTANCE_PROJECT:
      path: {{ .vaultPath | required "vaultPath is required for databaseInstance" }}
      key: {{ .projectVaultKey | required "projectVaultKey is required for databaseInstance" }}
      encoding: {{ .projectSourceEncoding | default "text" }}
    SQL_INSTANCE_REGION:
      path: {{ .vaultPath | required "vaultPath is required for databaseInstance" }}
      key: {{ .regionVaultKey | required "regionVaultKey is required for databaseInstance" }}
      encoding: {{ .regionSourceEncoding | default "text" }}
    SQL_INSTANCE_NAME:
      path: {{ .vaultPath | required "vaultPath is required for databaseInstance" }}
      key: {{ .nameVaultKey | required "nameVaultKey is required for databaseInstance" }}
      encoding: {{ .nameSourceEncoding | default "text" }}
    {{- end }}
