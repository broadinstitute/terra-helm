
{{- if .Values.certManager.enabled }}
apiVersion: cert-manager.io/v1alpha3
kind: Certificate
metadata:
  name: {{ .Chart.Name }}-cert
  {{- if ne .Values.namespaceOverride "" }}
  namespace: {{ .Values.namespaceOverride }}
  {{- end }}
  labels: {{ include "prometheus.labels" . | nindent 4 }}
spec:
  secretName: {{ .Chart.Name }}-cert
  renewBefore: {{ .Values.certManager.renewBefore }}
  dnsNames:
  - {{ .Values.certManager.dnsNames }}
  issuerRef:
    name: {{ .Values.certManager.issuerName }}
    kind: {{ .Values.certManager.issuerKind }}
{{ else if .Values.vaultCert.enabled -}}
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: secretdefinition-{{ .Chart.Name }}-cert
  {{- if ne .Values.namespaceOverride "" }}
  namespace: {{ .Values.namespaceOverride }}
  {{- end }}
  labels: {{ include "prometheus.labels" . | nindent 4 }}
spec:
  name: {{ .Chart.Name }}-cert
  keysMap:
    tls.crt:
      path: {{ required "A valid vaultCert.cert.path value is required when vaultCert is enabled" .Values.vaultCert.cert.path }}
      key: {{ required "A valid vaultCert.cert.secretKey value is required when vaultCert is enabled" .Values.vaultCert.cert.secretKey }}
    tls.key:
      path: {{ required "A valid vaultCert.key.path value is required when vaultCert is enabled" .Values.vaultCert.key.path }}
      key: {{ required "A valid vaultCert.key.secretKey value is required when vaultCert is enabled" .Values.vaultCert.key.secretKey }}
    ca-bundle.crt:
      path: {{ required "A valid vaultCert.chain.path value is required when vaultCert is enabled" .Values.vaultCert.chain.path }}
      key: {{ required "A valid vaultCert.chain.secretKey value is required when vaultCert is enabled" .Values.vaultCert.chain.secretKey }}
    tls-full.crt:
      path: {{ required "A valid vaultCert.fullChain.path value is required when vaultCert is enabled" .Values.vaultCert.fullChain.path}}
      key: {{ required "A valid vaultCert.fullChain.secretKey value is required when vaultCert is enabled" .Values.vaultCert.fullChain.secretKey }}
{{ end -}}
