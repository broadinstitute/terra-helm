
# namespaceOverride -- (string) enables installing to monitoring namespace when deployed as dependency via argoCd
namespaceOverride: "" # Must match value for prometheus-operator.namespaceOverride if used

# prometheusRuleSelector -- (string) used to create a label that prometheus selcts to determine which rules to alert on
prometheusRuleSelector: prometheus-operator

resourceValidator:
  # resourceValidator.ignore -- (bool) flag to modify the cronjob alert query to ignore failures of Leonardo's resource-validator.
  ignore: false

# TLS Values
certManager:
  # certManager.enabled -- (bool) Use tls credentials generated by cert-manager via lets encrypt
  enabled: false
  # certManager.renewBefore -- (string) Time before expiration when cert-manager will auto renew tls. Default is 30 days. Must be specified in hours
  renewBefore: 720h # 30 days before exp
  # certmanager.dnsNames --([string]) List of dns names to add to the tls cert
  dnsNames: [] # prometheus.[cluster].envs.broadinstitute.org
  # Default lets-encypt certificates 
  # certManager.issuerName -- (string) Name of the Issuer or ClusterIssuer resource that will be used to obtain the tls certificate
  issuerName: cert-manager-letsencrypt-prod
  issuerKind: ClusterIssuer

vaultCert:
  # vaultCert.enabled -- Enable to sync certificate secret from Vault with secrets-manager
  enabled: false
  cert:
    # vaultCert.cert.path -- (string) Path to secret containing .crt
    path: 
    # vaultCert.cert.secretKey -- (string) Key in secret containing .crt
    secretKey: 
  key:
    # vaultCert.key.path -- (string) Path to secret containing .key
    path: 
    # vaultCert.key.secretKey -- (string) Key in secret containing .key
    secretKey: 
  chain:
    # vaultCert.chain.path -- (string) Path to secret containing intermediate .crt
    path: 
    # vaultCert.chain.secretKey -- (string) Key in secret containing intermediate .crt
    secretKey: 

# prometheus-to-sd values. Used specifically for sending kube state metrics to sd
prometheusToSD:
  # prometheusToSD.imageRepo -- (string) image repo for prometheus-to-sd-exporter
  imageRepo: gcr.io/google-containers/prometheus-to-sd
  # prometheusToSD.imageTag -- (string) image tag for prometheus-to-sd-exporter
  imageTag: v0.5.2
  # prometheusToSD.monitoredResourceTypes -- (string) used internally by stackdriver, don't change this
  monitoredResourceTypes: k8s
  # prometheusToSD.replicaCount -- (int) number of prometheus-to-sd replicas to run
  replicaCount: 1
  # prometheusToSD.metricsSources -- (object) map of prometheus scrape targets to export to SD
  metricsSources: {}
    # kube-state-metrics: null

thanos:
  ingress:
    enabled: false
    securityPolicy: null
    iap:
      enabled: false
# Promethues-Operator values
kube-prometheus-stack:
  # promtheus-operator.fullnameOverride -- (string) Use the name of this chart rather than prometheus operator built in templating.
  fullnameOverride: "terra-prometheus-operator"
  # prometheus-operator.namespaceOverride -- (string) For use with argocd to ensure prometheus resources are installed to monitoring namespace
  namespaceOverride: ""
  prometheusOperator:
    # prometheusOperator.createCustomResource -- Older versions of prometheus-operator had issues installing crds properly, this may no longer be needed.
    createCustomResource: false

  prometheus:
    ingress:
      # prometheus-operator.prometheus.ingress.enabled -- expose prometheus web ui through gke ingress
      enabled: true
      # prometheus-operator.prometheus.ingress.annotations -- annotations to attache to prometheus ingress resource.
      annotations:
        kubernetes.io/ingress.global-static-ip-name: # terra-[env]-prometheus-ip
        kubernetes.io/ingress.allow-http: "false"
      
      # prometheus-operator.prometheus.ingress.hosts -- ([string]) List of domain host(s) that the ingress should be accessible from 
      hosts: []
        # - prometheus.dsde-[env].broadinstitute.org

      # prometheus-operator.prometheus.ingress.paths --([string]) List of paths if the ingress supports multiple backend services
      paths:
        - /*

      # prometheus-operator.prometheus.ingress.tls -- ([string]) List of k8s secret names containing tls credentials.
      tls:
        - secretName: terra-prometheus-cert

    service:
      # prometheus-operator.prometheus.service.annotations -- (object) Used for attaching backend-config resources to prometheus service 
      annotations:
        cloud.google.com/backend-config: 

      # prometheus-operator.prometheus.service.type -- (string) Service type for prometheus, must be NodePort for ingress to work.
      type: NodePort


    prometheusSpec:
      # prometheus-operator.promethues.prometheusSpec.scrapeInterval -- (string) time to wait between consecutive scrapes of metrics endpoints
      scrapeInterval: "60s"
      # prometheus-operator.promethues.prometheusSpec.evaluationInterval -- (string) time to wait between consecutive evaluations of monitoring rules
      evaluationInterval: "60s"
      # prometheus-operator.prometheus.prometheusSpec.externalUrl -- (string) URL at which prometheus UI will be available.
      externalUrl: 
      # prometheus-operator.prometheus.prometheusSpec.containers -- ([object]) Used to inject the stackdriver exporter into prometheus pods.
      containers: 
  #       # - name: stackdriver-exporter
  #       #   image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar
  #       #   imagePullPolicy: Always
  #       #   args: 
  #       #     - --stackdriver.project-id=GCP_PROJECT_ID
  #       #     - --prometheus.wal-directory=prometheus/wal
  #       #     - --stackdriver.kubernetes.location=CLUSTER_REGION
  #       #     - --stackdriver.kubernetes.cluster-name=CLUSTER_NAME
  #       #   ports:
  #       #     - name: stackdriver-exp
  #       #       containerPort: 9091
  #       #   volumeMounts:
  #       #     - name: prometheus-terra-prometheus-operator-prometheus-db
  #       #       mountPath: /prometheus
