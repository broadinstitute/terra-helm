# What version of Cromwell to deploy
global:
  # What version of the application to deploy
  applicationVersion: latest
  # A map of addresses that will be merged with serviceAllowedAddresses. Example: `{ "nickname": ["x.x.x.x/y", "x.x.x.x/y"] }`
  trustedAddresses: {}

# Cromwell has 4 deployments:
# - reader      - serves requests from other apps
# - runner      - background - runs batch jobs
# - summarizer  - background - summarizes job results
# - legacy      - legacy all-in-one Cromwell (also serves requests from other apps)

# Default settings for all Cromwell deployments
deploymentDefaults:
  enabled: true  # Whether a declared deployment is enabled. If false, no resources will be created
  name: null     # Set separately in each deployment. Eg. "cromwell1-reader"
  imageTag: null # Defaults to global.applicationVersion
  replicas: 0    # Number of replicas
  expose: false  # Whether to create a LoadBalancer service for this deployment
  serviceName: null  # What to call the service
  serviceIP: x.x.x.x # Static IP to use for the Service
  serviceAllowedAddresses: {} # What source IPs to whitelist for access to the service
  # legacyResourcePrefix: null # What prefix to use to refer to secrets rendered from firecloud-develop. Defaults to `name`

# A map of Cromwell deployments. In Terra's production environment,
# Cromwell is deployed as 4 separate services with different configurations.
#
deployments:
  # Settings for the reader deployment
  reader:
    name: cromwell1-reader
    replicas: 3
    expose: true
    serviceName: cromwell1
    legacyResourcePrefix: cromwell1-frontend

  # Settings for the runner deployment
  runner:
    name: cromwell1-runner
    replicas: 3

  # Settings for the summarizer deployment
  summarizer:
    name: cromwell1-summarizer
    replicas: 1

  # Settings for the legacy cromwell2 deploymnet
  legacy:
    name: cromwell2
    replicas: 1
    expose: true
    serviceName: cromwell2
