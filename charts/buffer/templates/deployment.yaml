apiVersion: apps/v1
kind: Deployment
metadata:
  name: terra-buffer-deployment
  labels:
    {{ template "buffer.labels" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: terra-buffer
  template:
    metadata:
      name: terra-buffer-service
      labels:
        app: terra-buffer
    spec:
      serviceAccountName: terra-buffer-service-sa
      containers:
      - name: terra-buffer
        image: "{{- if .Values.image -}}
            {{ .Values.image }}
          {{- else -}}
            {{ .Values.imageConfig.repository }}:{{ default .Values.appVersion .Values.imageConfig.tag }}
          {{- end }}"
        imagePullPolicy: {{ .Values.imageConfig.imagePullPolicy }}
        {{- if not .Values.proxy.enabled }}
        ports:
        - containerPort: 8080
        {{- end}}
        env:
        - name: BUFFER_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: buffer-postgres-db-creds
              key: username
        - name: BUFFER_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: buffer-postgres-db-creds
              key: password
        - name: BUFFER_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: buffer-postgres-db-creds
              key: db
        - name: BUFFER_POOL_CONFIG_PATH
          value: {{ .Values.buffer.pool.configPath }}
        - name: BUFFER_STAIRWAY_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: buffer-stairway-db-creds
              key: username
        - name: BUFFER_STAIRWAY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: buffer-stairway-db-creds
              key: password
        - name: BUFFER_STAIRWAY_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: buffer-stairway-db-creds
              key: db
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secrets/app/service-account.json
        # Janitor configs to enable BUFFER publish message to Janitor to cleanup resource.
        # It is needed if BUFFER clients use the BUFFER for their integration test.
        {{- if .Values.cleanupAfterHandout }}
        - name: BUFFER_CRL_CLEANUP_AFTER_HANDOUT
          value: 'true'
        - name: BUFFER_CRL_JANITOR_CLIENT_CREDENTIAL_FILE_PATH
          value: /secrets/app/janitor-client-sa.json
        - name: BUFFER_CRL_JANITOR_TRACK_RESOURCE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: buffer-crl-janitor-track-resource-pubsub
              key: project
        - name: BUFFER_CRL_JANITOR_TRACK_RESOURCE_TOPIC_ID
          valueFrom:
            secretKeyRef:
              name: buffer-crl-janitor-track-resource-pubsub
              key: topic
        {{- end }}
        # Environment variables for OpenCensus resource auto detection.
        - name: CONTAINER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
          - name: app-sa-creds
            mountPath: /secrets/app
            readOnly: true
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.16
        env:
        - name: SQL_INSTANCE_PROJECT
          valueFrom:
            secretKeyRef:
              name: buffer-cloudsql-postgres-instance
              key: project
        - name: SQL_INSTANCE_REGION
          valueFrom:
            secretKeyRef:
              name: buffer-cloudsql-postgres-instance
              key: region
        - name: SQL_INSTANCE_NAME
          valueFrom:
            secretKeyRef:
              name: buffer-cloudsql-postgres-instance
              key: name
        command: ["/cloud_sql_proxy",
                  "-instances=$(SQL_INSTANCE_PROJECT):$(SQL_INSTANCE_REGION):$(SQL_INSTANCE_NAME)=tcp:5432",
                  "-credential_file=/secrets/cloudsql/service-account.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-sa-creds
          mountPath: /secrets/cloudsql
          readOnly: true
      {{- if .Values.proxy.enabled }}
      - name: oidc-proxy
        image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.version }}"
        ports:
        - containerPort: 443
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/apache2/sites-available/site.conf
          name: apache-httpd-proxy-config
          subPath: buffer-proxy.conf
        - mountPath: /etc/ssl/certs/server.crt
          subPath: tls.crt
          name: cert
          readOnly: true
        - mountPath: /etc/ssl/private/server.key
          subPath: tls.key
          name: cert
          readOnly: true
        {{- if .Values.vaultCert.enabled}}
        - mountPath: /etc/ssl/certs/ca-bundle.crt
          subPath: ca-bundle.crt
          name: cert
          readOnly: true
        {{- end }}
      {{- end }}
      volumes:
        - name: cloudsql-sa-creds
          secret:
            secretName: buffer-cloudsql-sa
        - name: app-sa-creds
          secret:
            secretName: buffer-app-sa
        {{- if .Values.proxy.enabled }}
        - name: apache-httpd-proxy-config
          configMap:
            name: terra-buffer-proxy-configmap
            items:
            - key: apache-httpd-proxy-config
              path: buffer-proxy.conf
        - name: cert
          secret:
            secretName: {{ .Chart.Name }}-cert
        {{- end }}
