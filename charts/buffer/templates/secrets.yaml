{{ if .Values.vault.enabled }}
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.name }}-postgres-db-creds
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: {{ .Values.name }}-postgres-db-creds
  keysMap:
    db:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/db-creds
      key: db
    username:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/db-creds
      key: username
    password:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/db-creds
      key: password
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.name }}-stairway-db-creds
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: {{ .Values.name }}-stairway-db-creds
  keysMap:
    db:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/stairway-db-creds
      key: db
    username:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/stairway-db-creds
      key: username
    password:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/stairway-db-creds
      key: password
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.name }}-postgres-instance
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: {{ .Values.name }}-cloudsql-postgres-instance
  keysMap:
    project:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/instance
      key: project
    region:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/instance
      key: region
    name:
      path: {{ .Values.vault.pathPrefix }}/buffer/postgres/instance
      key: name
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.name }}-cloudsql-sa
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: {{ .Values.name }}-cloudsql-sa
  keysMap:
    service-account.json:
      path: {{ .Values.vault.pathPrefix }}/buffer/sqlproxy-sa
      encoding: base64
      key: key
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.name }}-app-sa
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: {{ .Values.name }}-app-sa
  keysMap:
    service-account.json:
      path: {{ .Values.vault.pathPrefix }}/buffer/app-sa
      encoding: base64
      key: key
    {{- if .Values.cleanupAfterHandout }}
    # Only needed if we want RBS use Janitor to cleanup resource. Should not be enabled on prod RBS
    janitor-client-sa.json:
      path: {{ .Values.vault.janitorClientCredentialPath }}
      encoding: base64
      key: key
    {{ end }}
{{- if .Values.cleanupAfterHandout }}
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: {{ .Values.name }}-crl-janitor-track-resource-pubsub
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: {{ .Values.name }}-crl-janitor-track-resource-pubsub
  keysMap:
    project:
      path: {{ .Values.vault.janitorPubSubConfigPath }}/pubsub
      key: project
    topic:
      path: {{ .Values.vault.janitorPubSubConfigPath }}/pubsub
      key: topic
{{ end }}
{{- if .Values.proxy.tcell.enabled }}
---
apiVersion: secrets-manager.tuenti.io/v1alpha1
kind: SecretDefinition
metadata:
  name: secretdefinition-proxy-tcell-secrets
  labels:
    {{- include "buffer.labels" . | nindent 4 }}
spec:
  name: proxy-tcell-secrets
  keysMap:
    app-id:
      path: {{ .Values.proxy.tcell.vaultPrefix }}/tcell_app_id
      key: tcell_app_id
    api-key:
      path: {{ .Values.proxy.tcell.vaultPrefix }}/tcell_api_key
      key: tcell_api_key
{{- end }}
{{ end }}
