# projectName -- Required. Name of the project this ArgoCD application belongs to. Eg. "terra-dev", "terra-cluster-dev"
projectName: null

# description -- Optional. Description for this app. Eg. "Applications for Leo in Terra's dev environment"
description: null

# clusterName -- Required. The name of the cluster (as defined in ArgoCD) that is being deployed to. Eg. terra-dev
clusterName: null

# clusterAddress -- Required. The control plane address of the cluster that is being deployed to. Eg. "https://35.238.186.116"
clusterAddress: null

# releaseType -- Required. The type of release. Either "app" or "cluster"
releaseType: null

# releaseName -- Required. The name of the Helm chart that is being deployed. Eg. "leonardo", "diskmanager"
releaseName: null

# targetName -- Required. The name of the Terra environment or cluster that is being deployed to. Eg. "dev", "terra-prod"
targetName: null

# namespace -- Required. The namespace where the release is being deployed to. Eg. "terra-dev"
namespace: null

# jenkinsSyncGroup -- Optional. Add this to the group of apps Jenkins syncs during a deploy. Eg. "dev", "alpha", "prod"
jenkinsSyncGroup: null

# jenkinsSyncEnabled -- Deprecated. Enable Jenkins-triggered syncs during monolith release promotions.
jenkinsSyncEnabled: true

# syncPolicy -- Optional: Sync policy for the ArgoCD app.
# See https://argoproj.github.io/argo-cd/user-guide/auto_sync/
# @default -- No sync policy (manual)
syncPolicy: null

# purgeDeployedResourcesOnDelete -- If an ArgoCD Application is deleted,
# purge deployed resources as well. Eg. if the `cromwell-dev`
# app is deleted, delete all the deployed Cromwell pods/secrets/etc from
# the dev cluster
purgeDeployedResourcesOnDelete: false

# helmfileRepo -- URL for Terra's helmfile repo
helmfileRepo: https://github.com/broadinstitute/terra-helmfile

# helmfileRepoRevision -- Target revision of terra-helmfile to deploy.
# We follow GitOps, so HEAD/master branch of terra-helmfile is "the desired
# state of the world", but occasionally it is useful to deploy off a terra-helmfile
# PR branch
helmfileRepoRevision: HEAD

# legacyConfigsEnabled -- Whether to create a separate application to sync values from firecloud-develop
legacyConfigsEnabled: false

# legacyConfigsRepo -- Repo to pull legacy configs from
legacyConfigsRepo: https://github.com/broadinstitute/firecloud-develop

# legacyConfigsRepoRef -- Branch/ref to pull legacy configs from
legacyConfigsRepoRef: dev

# legacyConfigsInstanceTypes -- Which instance types to render consul-template configs for
# (passed to consul-template via INSTANCE_TYPE env var)
legacyConfigsInstanceTypes: []

# legacyConfigsEnv -- Any additional environment variables to pass in to the configure.rb process.
# @default -- documented invidually
legacyConfigsEnv:
  # legacyConfigsEnv.APP_NAME -- configure.rb app name
  # @default -- terra app name passed in via .app value, eg. cromwell
  APP_NAME: null
  # legacyConfigsEnv.ENV -- configure.rb env name
  # @default -- terra env name passed in via .environment value, eg. dev
  ENV: null
  # legacyConfigsEnv.RUN_CONTEXT -- configure.rb run context
  # @default -- live
  RUN_CONTEXT: live
