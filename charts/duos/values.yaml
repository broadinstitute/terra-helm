global:
  # global.applicationVersion -- What version of the DUOS application to deploy
  applicationVersion: latest

# Should be set to true when deploying locally with Skaffold
devDeploy: false

# environment -- (string) The environment of the service. Required
environment:

# apiUrl -- (string) The Consent API url
apiUrl:

# ontologyApiUrl -- (string) The Ontology API url
ontologyApiUrl:

# googleClientId -- (string) The OAuth google client id
googleClientId:

# errorApiKey -- (string) The StackDriver API client id
errorApiKey:

# firecloudUrl -- (string) The FireCloud API url
firecloudUrl:

# gwasUrl -- (string) The GWAS url, currently unused
gwasUrl:

# profileUrl -- (string) The eRA Auth Profile URL
profileUrl:

# nihUrl -- (string) The eRA Auth Redirect URL
nihUrl:

# powerBiUrl -- (string) The PowerBI url
powerBiUrl:

# gaId -- (string) The Google Analytics ID
gaId:

# newDarUi -- (bool) Feature Flag for the new DAR UI
newDarUi:

# newChairConsole -- (bool) Feature Flag for the new DAC Chair Console
newChairConsole:

image:
imageRepository:
imageTag:

ingress:
  # ingress.enabled -- Whether to create Ingress, Service and associated config resources
  enabled: true
  # ingress.staticIpName -- (string) Required. Name of the static IP, allocated in GCP, to associate with the Ingress
  staticIpName: null
  # ingress.sslPolicy -- (string) Name of a GCP SSL policy to associate with the Ingress
  sslPolicy: null
  # ingressTimeout -- (number) number of seconds requests on the https loadbalancer will time out after
  timeoutSec: 120
  cert:
    # If preSharedCerts is not empty, they are used. Otherwise a secret with the cert is expected.
    # If cert.vault is enabled, a secrets-manager SecretDefinition resource is created to sync the
    #   certificate from Vault to a k8s secret. Otherwise the secret is expected to already exist.
    vault:
      enabled: false
      cert:
        # ingress.cert.vault.cert.path -- (string) Path to secret containing .crt
        path: null
        # ingress.cert.vault.cert.secretKey -- (string) Key in secret containing .crt
        secretKey: null
      key:
        # ingress.cert.vault.key.path -- (string) Path to secret containing .key
        path: null
        # ingress.cert.vault.key.secretKey -- (string) Key in secret containing .key
        secretKey: null
    # ingress.cert.preSharedCerts -- Array of pre-shared GCP SSL certificate names to associate with the Ingress
    preSharedCerts: []

probes:
  readiness:
    # probes.readiness.enable -- Whether to configure a readiness probe
    enabled: true
    spec:
      httpGet:
        path: /status
        port: 8080
      timeoutSeconds: 1
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 6
      successThreshold: 1
  liveness:
    # probes.liveness.enable -- Whether to configure a liveness probe
    enabled: true
    spec:
      httpGet:
        path: /status
        port: 8080
      timeoutSeconds: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 30 # 5 minutes before restarted

proxyLogLevel:
proxyImageRepository:
proxyImageVersion:

replicas:

vaultEnabled: true

vaultCertPath:
vaultCertSecretKey:
vaultKeyPath:
vaultKeySecretKey:
vaultChain:
vaultChainPath:
vaultChainSecretKey:
