apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Chart.Name }}-daemonset
  labels:
{{ include "filebeat.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
{{ include "filebeat.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-sa
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat
        image: {{ .Values.image }}:{{ .Values.imageTag }}
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        envFrom:
        - secretRef:
            name: filebeat-secrets
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: inputs
          mountPath: /usr/share/filebeat/inputs.d
          readOnly: true
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: {{ .Chart.Name }}-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: inputs
        configMap:
          defaultMode: 0600
          name: {{ .Chart.Name }}-inputs
      # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
      - name: data
        hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate