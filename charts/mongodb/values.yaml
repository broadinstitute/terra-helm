# global.storageClass -- storageClass to use when provisioning persistent disks (passed to Bitnami chart)
global:
  # XFS filesystems are recommended for production mongodb installations
  # http://dochub.mongodb.org/core/prodnotes-filesystem
  storageClass: terra-xfs-zonal

# name -- the name of the service deployed by this chart. Defaults to "mongodb". If this value is overridden, be careful to also update the bitnami subchart values below to match!
name: mongodb

# vaultSecrets -- Where in Vault to find secrets used by MongoDB chart.
vaultSecrets:
  rootPassword:
    # vaultSecrets.rootPassword.path -- Path in Vault the MongoDB root password is stored
    path:
    # vaultSecrets.rootPassword.key -- Key in Vault where the MongoDB root password is stored
    key:
  replicaSetKey:
    # vaultSecrets.replicaSetKey.path -- Path in Vault the MongoDB replica set key is stored
    path:
    # vaultSecrets.replicaSetKey.key -- Key in Vault where the MongoDB replica set key is stored
    key:
  agoraPassword:
    # vaultSecrets.agoraPassword.path -- Path in Vault the Agora password is stored
    path:
    # vaultSecrets.agoraPassword.key -- Key in Vault where the Agora password is stored
    key:
  backupCredentials:
    # vaultSecrets.backupCredentials.path -- Path in Vault where base64-encoded GCP service account key for backups is stored
    path:
    # vaultSecrets.backupCredentials.key -- Key in Vault where base64-encoded GCP service account key for backups is stored
    key:

backup:
  # backup.enabled -- Whether to automatically back up MongoDB with a nightly mongodump + copy to GCP bucket
  enabled: false
  # backup.nodeSelector -- NodeSelector for backup CronJob pods
  nodeSelector: {}
  # backup.tolerations -- Tolerations for backup CronJob pods
  tolerations: []
  # backup.timeoutSeconds -- How many seconds to wait before assuming job is hung and killing it
  timeoutSeconds: 7200 # 2 hrs
  # backup.gcsBucket -- Name of the GCS bucket where backups should be copied
  gcsBucket:
  cloudsdkImage:
    # backup.cloudsdkImage.repository -- Image repository to use for Cloud SDK
    repository: gcr.io/google.com/cloudsdktool/cloud-sdk
    # backup.cloudsdkImage.repository -- Image tag to use for Cloud SDK
    tag: 326.0.0-alpine

# These values are passed to the upstream bitnami chart. See documentation here:
#   https://github.com/bitnami/charts/tree/master/bitnami/mongodb
bitnami:
  image:
    repository: bitnami/mongodb
    tag: 4.4.3-debian-10-r31
  arbiter: # Disable arbiter since the dataset is small & we can run 3 replicas
    enabled: false
  architecture: replicaset
  auth:
    existingSecret: mongodb-secrets # Update to match .Values.name if changed!
    username: agora
    database: agora
  fullnameOverride: mongodb # Update to match .Values.name if changed!
  labels:
    app.kubernetes.io/instance: mongodb # Update to match .Values.name if changed!
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: terra
  persistence:
    annotations: # This annotation tells disk-manager to configure a snapshot policy on the disks
      bio.terra/snapshot-policy: terra-snapshot-policy
    size: 50Gi
  replicaCount: 3
  resources: # Match existing prod MongoDB instances
    limits:
      cpu: 3.5
      memory: 23Gi
    requests:
      cpu: 3.5
      memory: 23Gi
  serviceAccount:
    create: false
    name: mongodb-sa # Update to match .Values.name if changed!
  volumePermissions:
    enabled: true
