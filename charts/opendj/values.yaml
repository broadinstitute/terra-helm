global:
  # global.trustedAddresses -- A map of addresses that will be merged with serviceAllowedAddresses. Example: `{ "nickname": ["x.x.x.x/y", "x.x.x.x/y"] }`
  trustedAddresses: {}

# name -- A name for the deployment that will be substituted into resuorce definitions
name: opendj

imageConfig:
  # imageConfig.repository -- Image repository
  repository: broadinstitute/openam
  # imageConfig.tag -- (string) Image tag.
  tag: opendj_3
  imagePullPolicy: Always

# replicas -- Number of replicas for the deployment
replicas: 1

resources:
  requests:
    # resources.requests.cpu -- Number of CPU units to request for the deployment
    cpu: 64
    # resources.requests.memory -- Memory to request for the deployment
    memory: 60Gi
  limits:
    # resources.limits.cpu -- Number of CPU units to limit the deployment to
    cpu: 64
    # resources.limits.memory -- Memory to limit the deployment to
    memory: 60Gi

service:
  # service.staticIp -- (string) External IP of the service. Required.
  staticIp: null
  # service.firewallEnabled -- Whether to restrict access to the service to the IPs supplied via service.allowedAddresses
  firewallEnabled: true
  # service.allowedAddresses -- A map of addresses in the form `{ "nickname": ["x.x.x.x/y", "x.x.x.x/y"] }`
  allowedAddresses: {}
  ports:
    # service.ports.ldaps -- Whether to enable the LDAPS(636) port
    ldaps: true
    # service.ports.ldap -- Whether to enable the LDAP(389) port
    ldap: false
    # service.ports.admin -- Whether to enable the admin(4444) port
    admin: false

# nodeSelector -- nodeSelector map
nodeSelector: {}
# affinity -- affinity map
affinity: {}
# tolerations -- Array of tolerations
tolerations: []

persistence:
  # persistence.storageClassName -- (string) If not null, the volume will be restricted to the specified storage class
  storageClassName: null
  # persistence.capacity -- Capacity of persistent data volume
  capacity: 200Gi

# legacyResourcePrefix -- What prefix to use to refer to secrets rendered from firecloud-develop
# @default .Chart.Name
legacyResourcePrefix: null

snapshot:
  # snapshot.enable -- Whether to enable a gcp snapshot policy for the data disk
  enable: true
  # snapshot.policy -- Name of the snapshot policy to use on data disk
  policy: terra-snapshot-policy

backup:
  # backup.enabled -- Whether to automatically back up OpenDJ nightly + copy to GCP bucket
  enabled: false
  # backup.nodeSelector -- NodeSelector for backup CronJob pods
  nodeSelector: {}
  # backup.tolerations -- Tolerations for backup CronJob pods
  tolerations: []
  # backup.timeoutSeconds -- How many seconds to wait before assuming job is hung and killing it
  timeoutSeconds: 7200 # 2 hrs
  # backup.gcsBucket -- Name of the GCS bucket where backups should be copied
  gcsBucket:
  cloudsdkImage:
    # backup.cloudsdkImage.repository -- Image repository to use for Cloud SDK
    repository: gcr.io/google.com/cloudsdktool/cloud-sdk
    # backup.cloudsdkImage.repository -- Image tag to use for Cloud SDK
    tag: '326.0.0'
  # backup.clusterLocation -- Where the GKE cluster is located
  clusterLocation: "--zone us-central1-a"

# vaultSecrets -- Where in Vault to find secrets used by this chart.
vaultSecrets:
  backupCredentials:
    # vaultSecrets.backupCredentials.path -- Path in Vault where base64-encoded GCP service account key for backups is stored
    path:
    # vaultSecrets.backupCredentials.key -- Key in Vault where base64-encoded GCP service account key for backups is stored
    key:
