apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: opendj
  labels:
    app: opendj
    {{ if not .Values.devDeploy }}{{ template "opendj.labels" }}{{ end }}
spec:
  serviceName: opendj
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: opendj
  template:
    metadata:
      labels:
        app: opendj
    spec:
      serviceAccountName: opendj-sa
      securityContext:
        # The OpenDJ process runs as a non-root user (1001) in its container. We need to make sure
        # that the mounted volume is writeable for that user.
        fsGroup: 1001
      containers:
      - name: opendj
        image: "{{- if .Values.image -}}
            {{ .Values.image }}
          {{- else -}}
            {{ .Values.imageConfig.repository }}:{{ default .Values.appVersion .Values.imageConfig.tag }}
          {{- end }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 1389
          protocol: TCP
        - containerPort: 1636
          protocol: TCP
        - containerPort: 4444
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: BASE_DN
          value: {{- template "opendj.baseDn" | quote }}
        - name: ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opendj-password
              key: password
        volumeMounts:
        - name: opendj-data
          mountPath: /opt/opendj/data
  volumeClaimTemplates:
  - metadata:
      name: opendj-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
