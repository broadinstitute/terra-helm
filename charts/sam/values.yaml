global:
  # global.applicationVersion -- What version of the Sam application to deploy
  applicationVersion: latest

# name -- A name for the deployment that will be substituted into resuorce definitions
name: sam

imageConfig:
  # imageConfig.repository -- Image repository
  repository: gcr.io/broad-dsp-gcr-public/sam
  # imageConfig.tag -- (string) Image tag.
  # @default -- global.applicationVersion
  tag:
  imagePullPolicy: Always

# replicas -- Number of replicas for the deployment
replicas: 0

resources:
  requests:
    # resources.requests.cpu -- Number of CPU units to request for the deployment
    cpu: 4
    # resources.requests.memory -- Memory to request for the deployment
    memory: 16Gi
  limits:
    # resources.limits.cpu -- Number of CPU units to limit the deployment to
    cpu: 4
    # resources.limits.memory -- Memory to limit the deployment to
    memory: 16Gi

# Allows CloudSQL proxy time to start up. See DDO-1352
startupSleep: 30

probes:
  readiness:
    # probes.readiness.enable -- Whether to configure a readiness probe
    enabled: true
    spec:
      httpGet:
        path: /status
        port: 8080
      timeoutSeconds: 5
      initialDelaySeconds: 20
      periodSeconds: 10
      failureThreshold: 6
      successThreshold: 1
  liveness:
    # probes.liveness.enable -- Whether to configure a liveness probe
    enabled: false
    spec:
      httpGet:
        path: /version
        port: 8080
      timeoutSeconds: 5
      initialDelaySeconds: 20
      periodSeconds: 10
      failureThreshold: 30 # 5 minutes before restarted
      successThreshold: 1
# proxyImage- Image that the OIDC proxy uses
proxyImage: broadinstitute/openidc-proxy:tcell_3_1_0

ingress:
  # ingress.enabled -- Whether to create Ingress, Service and associated config resources
  enabled: true
  # ingress.staticIpName -- (string) Required. Name of the static IP, allocated in GCP, to associate with the Ingress
  staticIpName: null
  # ingress.sslPolicy -- (string) Name of a GCP SSL policy to associate with the Ingress
  sslPolicy: null
  # ingressTimeout -- (number) number of seconds requests on the https loadbalancer will time out after
  timeoutSec: 120
  # ingress.securityPolicy -- (string) Name of a GCP CloudArmor policy to associate with this Ingress
  securityPolicy: null
  cert:
    # If preSharedCerts is not empty, they are used. Otherwise a secret with the cert is expected.
    # If cert.vault is enabled, a secrets-manager SecretDefinition resource is created to sync the
    #   certificate from Vault to a k8s secret. Otherwise the secret is expected to already exist.
    vault:
      enabled: true
      cert:
        # ingress.cert.vault.cert.path -- (string) Path to secret containing .crt
        path: null
        # ingress.cert.vault.cert.secretKey -- (string) Key in secret containing .crt
        secretKey: null
      key:
        # ingress.cert.vault.key.path -- (string) Path to secret containing .key
        path: null
        # ingress.cert.vault.key.secretKey -- (string) Key in secret containing .key
        secretKey: null
    # ingress.cert.preSharedCerts -- Array of pre-shared GCP SSL certificate names to associate with the Ingress
    preSharedCerts: []

# legacyResourcePrefix -- What prefix to use to refer to secrets rendered from firecloud-develop
# @default .Chart.Name
legacyResourcePrefix: null

# Requires deployment of Prometheus to cluster
prometheus:
  enabled: true
  initContainerImage: 'alpine:3.12.0'
  jmxJarRepo: 'https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent'
  jmxJarVersion: '0.13.0'

# Proxy configuration (overwrites values from fc-develop)
proxy:
  logLevel: warn
