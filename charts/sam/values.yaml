global:
  # global.applicationVersion -- What version of the Cromwell application to deploy
  applicationVersion: latest
  # global.trustedAddresses -- A map of addresses that will be merged with allowedAddresses.
  # Example: `{ "nickname": ["x.x.x.x/y", "x.x.x.x/y"] }`
  trustedAddresses: {}

# name -- A name for the deployment that will be substituted into resuorce definitions
name: sam

# ingressIpName -- Name of GCP global static external IP address. Required.
ingressIpName:

imageConfig:
  # imageConfig.repository -- Image repository
  repository: gcr.io/broad-dsp-gcr-public/sam
  # imageConfig.tag -- (string) Image tag.
  # @default -- global.applicationVersion
  tag:
  imagePullPolicy: Always

# replicas -- Number of replicas for the deployment
replicas: 0

resources:
  requests:
    # resources.requests.cpu -- Number of CPU units to request for the deployment
    cpu: 4
    # resources.requests.memory -- Memory to request for the deployment
    memory: 16Gi
  limits:
    # resources.limits.cpu -- Number of CPU units to limit the deployment to
    cpu: 4
    # resources.limits.memory -- Memory to limit the deployment to
    memory: 16Gi

# allowedAddresses -- What source IPs to whitelist for access to the service
allowedAddresses: {}

# legacyResourcePrefix -- What prefix to use to refer to secrets rendered from firecloud-develop
# @default .Chart.Name
legacyResourcePrefix: null

ingressCert:
  cert:
    # ingressCert.cert.path -- (string) Path to secret containing .crt
    path:
    # ingressCert.cert.secretKey -- (string) Key in secret containing .crt
    secretKey:
  key:
    # ingressCert.key.path -- (string) Path to secret containing .key
    path:
    # ingressCert.key.secretKey -- (string) Key in secret containing .key
    secretKey:

# Requires deployment of Prometheus to cluster
prometheus:
  enabled: true
  initContainerImage: alpine:3.12.0
  jmxJarRepo: https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent
  jmxJarVersion: '0.13.0'

# Requires deployment of https://github.com/stakater/Reloader to cluster
reloader:
  enabled: true
