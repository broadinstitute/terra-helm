{{- $imageTag := .Values.imageConfig.tag | default .Values.global.applicationVersion -}}
{{- $legacyResourcePrefix := .Values.legacyResourcePrefix | default .Chart.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  labels:
    {{- include "sam.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "sam.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sam.labels" . | nindent 8 }}
      annotations:
        {{- /* Automatically restart deployments on config map change: */}}
        checksum/{{ .Values.name }}-configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-sa
      # Containers are configured to talk to each other by name
      # via docker-compose links; make corresponding aliases
      # to loopback in /etc/hosts
      hostAliases:
      - ip: 127.0.0.1
        hostnames:
        - app
        - sam-sqlproxy
      volumes:
      - name: configs
        configMap:
          name: {{ .Chart.Name }}-configmap
      - name: app-ctmpls
        secret:
          secretName: {{ $legacyResourcePrefix }}-app-ctmpls
      - name: proxy-ctmpls
        secret:
          secretName: {{ $legacyResourcePrefix }}-proxy-ctmpls
      - name: sqlproxy-ctmpls
        secret:
          secretName: {{ $legacyResourcePrefix }}-sqlproxy-ctmpls
      - name: {{ .Values.name }}-gc-logs
        emptyDir: {}
      - name: {{ .Values.name }}-proxy-security-logs
        emptyDir: {}
      {{- if .Values.prometheus.enabled }}
      - name: {{ .Values.name }}-prometheusjmx-jar
        emptyDir: {}
      {{- end }}
      containers:
      - name: {{ .Values.name }}-sqlproxy
        image: broadinstitute/cloudsqlproxy:1.11_20180808
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "sleep {{ .Values.startupSleep }}"]
        envFrom:
        - secretRef:
            name: {{ $legacyResourcePrefix }}-sqlproxy-env
        volumeMounts:
        - mountPath: /etc/sqlproxy-service-account.json
          subPath: sqlproxy-service-account.json
          name: sqlproxy-ctmpls
          readOnly: true
      - name: {{ .Values.name }}-app
        image: "{{ .Values.imageConfig.repository }}:{{ $imageTag }}"
        ports:
          - name: status
            containerPort: 8080
            protocol: TCP
          {{- if .Values.prometheus.enabled }}
          - name: metrics
            containerPort: 9090
            protocol: TCP
          {{- end }}
        command: ["/bin/bash"]
        args:
        - '-c'
        - >-
          java ${JAVA_OPTS}
          {{- if .Values.prometheus.enabled }}
          -javaagent:/etc/prometheusjmx/prometheusjmx.jar=9090:/etc/{{ .Values.name }}-cm/prometheusJmx.yaml
          {{- end }}
          -jar $(find /sam -name 'sam*.jar')
        - '--'
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        envFrom:
        - secretRef:
            name: {{ $legacyResourcePrefix }}-app-env
        env:
        # Make node, pod name accessible to app as env vars
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: configs
          mountPath: /etc/{{ .Values.name }}-cm
          readOnly: true
        - mountPath: /etc/sam.conf
          subPath: sam.conf
          name: app-ctmpls
          readOnly: true
        - mountPath: /etc/sam-account.pem
          subPath: sam-account.pem
          name: app-ctmpls
          readOnly: true
        - mountPath: /etc/sam-account.json
          subPath: sam-account.json
          name: app-ctmpls
          readOnly: true
        - mountPath: /etc/sam-firestore-account.json
          subPath: sam-firestore-account.json
          name: app-ctmpls
          readOnly: true
        - mountPath: /var/log/gc
          name: {{ .Values.name }}-gc-logs
        {{- if .Values.prometheus.enabled }}
        - name: {{ .Values.name }}-prometheusjmx-jar
          mountPath: /etc/prometheusjmx/prometheusjmx.jar
          subPath: prometheusjmx.jar
        {{- end }}
        {{- if .Values.probes.readiness.enabled }}
        readinessProbe:
          {{- toYaml .Values.probes.readiness.spec | nindent 10 }}
        {{- end }}
        {{- if .Values.probes.liveness.enabled }}
        livenessProbe:
          {{- toYaml .Values.probes.liveness.spec | nindent 10 }}
        {{- end }}
      - name: {{ .Values.name }}-proxy
        image: {{ .Values.proxyImage }}
        ports:
          - containerPort: 443
          - containerPort: 80
          - containerPort: 8888
        envFrom:
        - secretRef:
            name: {{ $legacyResourcePrefix }}-proxy-env
        # env overwrites duplicate values in envFrom
        env:
        - name: LOG_LEVEL
          value: {{ .Values.proxy.logLevel }}
        volumeMounts:
        - mountPath: /etc/ssl/certs/server.crt
          subPath: server.crt
          name: proxy-ctmpls
          readOnly: true
        - mountPath: /etc/ssl/private/server.key
          subPath: server.key
          name: proxy-ctmpls
          readOnly: true
        - mountPath: /etc/ssl/certs/ca-bundle.crt
          subPath: ca-bundle.crt
          name: proxy-ctmpls
          readOnly: true
        - mountPath: /etc/apache2/sites-available/site.conf
          subPath: site.conf
          name: proxy-ctmpls
          readOnly: true
        - mountPath: /etc/apache2/sites-enabled/mod_security_logging.conf
          subPath: mod_security_logging.conf
          name: proxy-ctmpls
          readOnly: true
        - mountPath: /etc/apache2/tcell_agent.config
          subPath: tcell_agent.config
          name: proxy-ctmpls
          readOnly: true
        - mountPath: /var/log/modsecurity
          name: {{ .Values.name }}-proxy-security-logs
      {{- if .Values.prometheus.enabled }}
      initContainers:
      - name: download-prometheus-jmx-jar
        image: {{ .Values.prometheus.initContainerImage }}
        command: [
          "wget",
          "-O",
          "/{{ .Values.name }}-prometheusjmx-jar/prometheusjmx.jar", "{{ .Values.prometheus.jmxJarRepo }}/{{ .Values.prometheus.jmxJarVersion }}/jmx_prometheus_javaagent-{{ .Values.prometheus.jmxJarVersion }}.jar"
        ]
        volumeMounts:
        - name: {{ .Values.name }}-prometheusjmx-jar
          mountPath: /{{ .Values.name }}-prometheusjmx-jar
      {{- end }}
