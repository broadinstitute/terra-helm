global:
  # global.applicationVersion -- What version of the Ontology application to deploy
  applicationVersion: latest

# Values from consent config
confFilePath:
basicAuthUserKey:
basicAuthPasswordKey:
sendgridApiKeyKey:

# Values from postgres user info
databaseUserPath:
databaseUserKey:
databasePasswordKey:

databaseUrl:
# Should be set to true when deploying locally with Skaffold
devDeploy: false

elasticSearchServer1:
elasticSearchServer2:
elasticSearchServer3:

environment:

emailNotificationsEnabled:

gcsAccountPath:
gcsAccountKey:

googleClientId:
googleBucket:
googleBucketSubdirectory:
googleProject:
googleProjectZone:
cloudSqlInstance:

image:
imageRepository:
imageTag:

probes:
  readiness:
    # probes.readiness.enable -- Whether to configure a readiness probe
    enabled: true
    spec:
      httpGet:
        path: /status
        port: 8080
      timeoutSeconds: 1
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 10
      successThreshold: 1
  liveness:
    # probes.liveness.enable -- Whether to configure a liveness probe
    enabled: true
    spec:
      httpGet:
        path: /status
        port: 8080
      timeoutSeconds: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      failureThreshold: 30
  startup:
    # probes.startup.enable -- Whether to configure a startup probe
    enabled: true
    spec:
      httpGet:
        path: /status
        port: 8080
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 1080 # 3 hours before restarted, to prevent liveness probes from interrupting long-running liquibase migrations
      successThreshold: 1
# GKE ingress requires certificate in a slightly different format from the apache proxy
# This is used to set tls for the GKE ingress
ingressCert:
  cert:
    # ingressCert.cert.path -- (string) Path to secret containing .crt
    path:
    # ingressCert.cert.secretKey -- (string) Key in secret containing .crt
    secretKey:
  key:
    # ingressCert.key.path -- (string) Path to secret containing .key
    path:
    # ingressCert.key.secretKey -- (string) Key in secret containing .key
    secretKey:

# Resource name for the global static ip in google to be used for the ingress
ingressIpName:
# ingressTimeout -- (number) number of seconds requests on the https loadbalancer will time out after
ingressTimeout: 120

proxyLogLevel:
proxyImageRepository:
proxyImageVersion:

replicas: 1

sendgridApiKey:

sentryDsnPath:
sentryDsnKey:

servicesLocalUrl:
servicesOntologyUrl:

sslPolicy:  tls12-ssl-policy

vaultEnabled: true

vaultCertPath:
vaultCertSecretKey:
vaultKeyPath:
vaultKeySecretKey:
vaultChain:
vaultChainPath:
vaultChainSecretKey:
