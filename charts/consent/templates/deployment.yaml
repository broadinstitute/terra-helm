apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  labels:
{{ include "consent.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
{{ include "consent.labels" . | indent 8 }}
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-sa
      # Containers are configured to talk to each other by name
      # via docker-compose links; make corresponding aliases
      # to loopback in /etc/hosts
      hostAliases:
        - ip: 127.0.0.1
          hostnames:
            - app
      containers:
        - name: {{ .Chart.Name }}-service
          image: "{{- if .Values.image -}}
          {{ .Values.image }}
          {{- else -}}
          {{ .Values.imageRepository }}:{{ default .Values.global.applicationVersion .Values.imageTag }}
          {{- end }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - name: metrics
              containerPort: 9090
              protocol: TCP
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: dsn
            - name: PROMETHEUS_ARGS
              value: "-javaagent:/etc/prometheusjmx/prometheusjmx.jar=9090:/etc/consent-cm/prometheusJmx.yaml"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: databaseUser
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: databasePassword
            - name: SENDGRID_API
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: sendgridApiKey
          command: ["java"]
          args:
          - -Dsentry.stacktrace.app.packages=org.broadinstitute
          - -Dsentry.dsn=$(SENTRY_DSN)
          - -Ddw.database.user=$(DB_USER)
          - -Ddw.database.password=$(DB_PASSWORD)
          - -Ddw.mailConfiguration.sendGridApiKey=$(SENDGRID_API)
          - $(PROMETHEUS_ARGS)
          - -jar
          - /opt/consent.jar
          - server
          - /etc/consent-cm/consent.yaml
          volumeMounts:
            - name: configs
              mountPath: /etc/consent-cm
              readOnly: true
            - name: app-secrets
              mountPath: /etc/service-account.json
              subPath: service-account.json
              readOnly: true
            - name: consent-prometheusjmx-jar
              mountPath: /etc/prometheusjmx/prometheusjmx.jar
              subPath: prometheusjmx.jar
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 10
            successThreshold: 1
        - name: oidc-proxy
          image: "{{ .Values.proxyImageRepository }}:{{ .Values.proxyImageVersion }}"
          ports:
            - containerPort: 443
          volumeMounts:
            - name: configs
              mountPath: /etc/apache2/sites-available/site.conf
              subPath: site.conf
              readOnly: true
            - name: proxy-secrets
              mountPath: "/etc/ssl"
              readOnly: true
        - name: {{ .Chart.Name }}-sqlproxy
          image: broadinstitute/cloudsqlproxy:1.11_20191120
          env:
            - name: CLOUDSQL_CREDENTIAL_FILE
              value: /etc/sqlproxy-service-account.json
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: configs
              mountPath: /app/sqlproxy.env
              subPath: sqlproxy.env
              readOnly: true
            - name: app-secrets
              mountPath: /etc/sqlproxy-service-account.json
              subPath: service-account.json
              readOnly: true
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
      volumes:
        - name: configs
          configMap:
            name: {{ .Chart.Name }}-configmap
        - name: app-secrets
          secret:
            secretName: {{ .Chart.Name }}-secrets
        - name: proxy-secrets
          secret:
            secretName: {{ .Chart.Name }}-proxy-secrets
            items:
              - key: tls.crt
                path: certs/server.crt
              - key: tls.key
                path: private/server.key
              - key: ca-bundle.crt
                path: certs/ca-bundle.crt
        - name: consent-prometheusjmx-jar
          emptyDir: {}
      initContainers:
      - name: download-prometheus-jmx-jar
        image: alpine:3.12.0
        command: ["wget", "-O", "/consent-prometheusjmx-jar/prometheusjmx.jar", "https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.13.0/jmx_prometheus_javaagent-0.13.0.jar"]
        volumeMounts:
        - name: consent-prometheusjmx-jar
          mountPath: /consent-prometheusjmx-jar
