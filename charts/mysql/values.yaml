# Default values for mysql containers, can be overwritten at build time by environment configurations

global:
  # global.storageClass -- Storage class to use when provisioning persistent disks
  storageClass: standard
  # global.applicationVersion -- What version of mysql to deploy
  applicationVersion: latest

# name -- A name for the statefulset that will be substituted into resource definitions
name: mysql

# serviceName -- name of the terra service for which this mysql is for, i.e. leonardo.
# required, no default
serviceName:

# databaseName -- name of a default database that the service expects (if any)
# i.e. a new leonardo instance expects a 'leonardo' database to already exist
databaseName:

# Configs regarding the image to use for the pod
imageConfig:
  # imageConfig.repository -- Image repository
  repository: mysql
  # imageConfig.tag -- (string) Image tag.

  # @default -- global.applicationVersion
  tag:
  imagePullPolicy: Always

# number of replicas to use for the statefulset
replicas: 1

# Configs regarding the size and resource consumption of pods
resources:
  requests:
    # resources.requests.cpu -- Number of CPU units to request for the statefulset
    cpu: 1
    # resources.requests.memory -- Memory to request for the statefulset
    memory: 1Gi
  limits:
    # resources.limits.cpu -- Number of CPU units to limit the statefulset to
    cpu: 1
    # resources.limits.memory -- Memory to limit the statefulset to
    memory: 1Gi

# Adapted from here: https://kubernetes.io/docs/tasks/run-application/run-replicated-stateful-application/
probes:
  readiness:
    # probes.readiness.enable -- Whether to configure a readiness probe
    enabled: true
    spec:
      exec:
        # Check we can execute queries over TCP (skip-networking is off).
        command: 
          - "bash"
          - "-c"
          - 'mysql -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e "SELECT 1"'
      timeoutSeconds: 1
      initialDelaySeconds: 5
      periodSeconds: 2
      failureThreshold: 30 # 5 minutes before restarted
      successThreshold: 1
  liveness:
    # probes.liveness.enable -- Whether to configure a liveness probe
    enabled: true
    spec:
      exec:
        command: ["mysqladmin", "ping"]
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
      
# Vault configs for pulling secrets
vault:
  # vault.pathPrefix -- (string) Vault path prefix for secrets. Required if vault.enabled.
  pathPrefix:
  # vault.migration.dbUsernameKey -- Key in Vault secret to DB username
  dbUsernameKey: "db_user"
  # vault.migration.DbPasswordKey -- Key in Vault secret to DB password
  dbPasswordKey: "db_password"
