global:
  # global.applicationVersion -- What version of the cromiam application to deploy
  applicationVersion: latest
# imageRepository -- Image repo to pull cromiam images from
imageRepository: broadinstitute/cromiam
# imageTag -- Image tag to be used when deploying Pods
# @default global.applicationVersion
imageTag: null
# replicas -- Number of replicas for the deployment
replicas: 3

annotations: {}
# Resource limits for cromiam containers
resources:
  requests:
    # resources.requests.cpu -- Number of CPU units to request for the deployment
    cpu: 2
    # resources.requests.memory -- Memory to request for the deployment
    memory: 13Gi
  limits:
    # resources.limits.cpu -- Number of CPU units to limit the deployment to
    cpu: 2
    # resources.limits.memory -- Memory to limit the deployment to
    memory: 13Gi
# proxyImage -- Image that the OIDC proxy uses
proxyImage: broadinstitute/openidc-proxy:tcell_3_1_0
probes:
  readiness:
    # probes.readiness.enable -- Whether to configure a readiness probe
    enabled: true
    spec:
      httpGet:
        path: /engine/latest/version
        port: 8000
      timeoutSeconds: 5
      initialDelaySeconds: 20
      periodSeconds: 10
      failureThreshold: 6
      successThreshold: 1
  liveness:
    # probes.liveness.enable -- Whether to configure a liveness probe
    enabled: true
    spec:
      httpGet:
        path: /engine/latest/version
        port: 8000
      timeoutSeconds: 5
      initialDelaySeconds: 20
      periodSeconds: 10
      failureThreshold: 30 # 5 minutes before restarted
      successThreshold: 1
  startup:
    # probes.startup.enable -- Whether to configure a startup probe
    enabled: true
    spec:
      httpGet:
        path: /engine/latest/version
        port: 8000
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 1080 # 3 hours before restarted, to prevent liveness probes from interrupting long-running db migrations
      successThreshold: 1
# Settings for Cromiam's Ingress & Service
ingress:
  # ingress.enabled -- Whether to create Ingress and associated Service, FrontendConfig and BackendConfig
  enabled: true
  # ingress.staticIpName -- (string) Required. Name of the static IP, allocated in GCP, to associate with the Ingress
  staticIpName: null
  cert:
    # A TLS certificate is used for the GKE ingress and the OIDC proxy sidecar.
    # If preSharedCerts is not empty, its contents are used for the GKE ingress. Otherwise a secret with the cert is expected.
    # The cert secret is required if the OIDC proxy is enabled.
    # This secret can be
    #   - synced from Vault
    #   - created/managed with cert-manager
    #   - created manually before the chart is applied

    # ingress.cert.preSharedCerts -- Array of pre-shared GCP SSL certificate names to associate with the Ingress
    preSharedCerts: []
  # ingress.sslPolicy -- (string) Name of a GCP SSL policy to associate with the Ingress
  sslPolicy: null
  # ingress.timeoutSec -- Load balancer backend timeout
  timeoutSec: 120
  # ingress.securityPolicy -- (string) Name of a GCP CloudArmor policy to associate with this Ingress
  securityPolicy: null
