global:
  # global.applicationVersion -- What version of the rawls application to deploy
  applicationVersion: latest

# Resource limits for rawls containers
resources:
  requests:
    # resources.requests.cpu -- Number of CPU units to request for the deployment
    cpu: 8
    # resources.requests.memory -- Memory to request for the deployment
    memory: 16Gi
  limits:
    # resources.limits.cpu -- Number of CPU units to limit the deployment to
    cpu: 8
    # resources.limits.memory -- Memory to limit the deployment to
    memory: 16Gi

# Parameters to pull cert for GKE ingress from vault
ingressCert:
  cert:
    # ingressCert.cert.path -- (string) Path to secret containing .crt
    path:
    # ingressCert.cert.secretKey -- (string) Key in secret containing .crt
    secretKey:
  key:
    # ingressCert.key.path -- (string) Path to secret containing .key
    path:
    # ingressCert.key.secretKey -- (string) Key in secret containing .key
    secretKey:

# ingressIpName -- (string) Required. GCP resource name for ingress static ip
ingressIpName:

# ingressServiceName -- (string) Name of the rawls service to associate with GKE ingress.
ingressServiceName: rawls-frontend


prometheus:
  # prometheus.enabled -- (bool) Flag to enable JVM profiling via prometheus
  enabled: true

# sslPolicy -- (string) Name of an existing google ssl policy to associate with an ingress frontend-config
sslPolicy: tls12-ssl-policy 

# rawls can be run in multiple deployments. This key contains default
# settings for all deployments configured under the `deployments` key.
deploymentDefaults:
  # deploymentDefaults.enabled -- Whether a declared deployment is enabled. If false, no resources will be created
  enabled: true
  # deploymentDefaults.name -- A name for the deployment that will be substituted into resuorce definitions.
  # Example: `"rawls1-reader"`
  name: null
  # deploymentDefaults.imageTag -- Image tag to be used when deploying Pods
  # @defautl global.applicationVersion
  imageTag: null
  # deploymentDefaults.replicas -- Number of replicas for the deployment
  replicas: 0
  # deploymentDefaults.expose -- Whether to create a Service for this deployment
  expose: false
  # deploymentDefaults.serviceName -- What to call the Service
  serviceName: null
  # deploymentDefaults.serviceIP -- Static IP to use for the Service. If set, service will be of type LoadBalancer
  serviceIP: null
  # deploymentDefaults.legacyResourcePrefix -- What prefix to use to refer to secrets rendered from firecloud-develop
  # @default deploymentDefaults.name
  legacyResourcePrefix: null
